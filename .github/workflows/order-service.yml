name: CI/CD for Order Service

on:
  push:
    branches:
      - dev
    paths:
      - order-service/**
  pull_request:
    branches:
      - dev
    paths:
      - order-service/**
jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DB_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER_NAME: ${{ secrets.DB_USER_NAME }}
      DB_USER_PWD: ${{ secrets.DB_USER_PWD }}
      CONFIG_GIT_URL: ${{ secrets.CONFIG_GIT_URL }}
      ENCRYPT_KEY: ${{ secrets.ENCRYPT_KEY }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
      ECR_REPOSITORY: 'order-server'
      AWS_SECRET_ACCESS_KEY : ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: "adopt"

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build -p order-service


      - name: Test with Gradle
        run: ./gradlew test -p order-service

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1


      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/order-service:latest -f ./order-service/Dockerfile ./order-service


      - name: Tag Docker image for ECR
        run: docker tag ${{ secrets.DOCKER_USERNAME }}/order-service:latest ${{ secrets.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest

      - name: Push Docker image to ECR
        run: docker push ${{ secrets.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest
