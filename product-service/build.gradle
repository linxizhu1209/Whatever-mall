configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

ext {
	set('springCloudVersion', "2023.0.0")
}

dependencies {
	implementation project(':commerce-common')
	//mapstruct 의존성
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-config-client'

	implementation 'org.springframework.boot:spring-boot-starter-security'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// mysql 의존성
	runtimeOnly 'com.mysql:mysql-connector-j'
	// redis 의존성
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	//redisson 의존성
	implementation 'org.redisson:redisson-spring-boot-starter:3.18.0'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

bootJar {
	enabled = true
	mainClass = "org.book.commerce.productservice.ProductServiceApplication"
}
jar {
	enabled = false
}

tasks.named('compileJava').configure {
	options.compilerArgs = ['-parameters']
}


tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(JavaCompile) { options.compilerArgs.add("-parameters") }

tasks.withType(JavaCompile) {
	options.compilerArgs << '-parameters'
}